<!DOCTYPE html>
<html lang="zh-Hant">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>家庭時光膠囊 - 互動原型</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@400;500;700&display=swap" rel="stylesheet">
    <!-- React Libraries -->
    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
    <!-- Babel to transpile JSX -->
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
    <style>
        body {
            font-family: 'Noto Sans TC', sans-serif;
        }
        .mobile-screen {
            width: 100%;
            max-width: 414px;
            height: 800px;
            border: 8px solid #1a202c;
            border-radius: 40px;
            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
            overflow: hidden;
            position: relative;
            background-color: #f8fafc;
        }
        .page {
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            background-color: inherit;
        }
        .masonry {
            column-count: 2;
            column-gap: 1rem;
        }
        .masonry-item {
            display: inline-block;
            width: 100%;
            margin-bottom: 1rem;
            break-inside: avoid;
        }
        .featured-carousel::-webkit-scrollbar, .photo-carousel::-webkit-scrollbar, .tag-carousel::-webkit-scrollbar { display: none; }
        .like-button .heart-icon-outline { display: inline-block; }
        .like-button .heart-icon-solid { display: none; }
        .like-button.liked .heart-icon-outline { display: none; }
        .like-button.liked .heart-icon-solid { display: inline-block; color: #ef4444; } /* red-500 */
    </style>
</head>
<body class="bg-gray-100 flex items-center justify-center min-h-screen p-4">

    <div id="root"></div>

    <script type="text/babel">
        const { useState, useEffect } = React;

        // Mock Data
        const diaries = [
          { id: 1, title: '陽明山繡球花之旅', location: '台北市，陽明山', date: '2025年8月4日', imageUrl: 'https://placehold.co/600x400/34D399/FFFFFF?text=親子時光', privacy: 'group' },
          { id: 2, title: '寶寶的兩歲生日派對', location: '我們溫暖的家', date: '2025年7月20日', imageUrl: 'https://placehold.co/600x400/FBBF24/FFFFFF?text=生日快樂', privacy: 'private' },
          { id: 3, title: '宜蘭童玩節初體驗', location: '宜蘭縣，冬山河親水公園', date: '2025年7月5日', imageUrl: 'https://placehold.co/600x400/60A5FA/FFFFFF?text=夏日戲水', privacy: 'public' },
        ];
        
        const exploreDiaries = [
            { id: 101, title: '我們的第一次森林露營', author: '旅行的媽咪', imageUrl: 'https://placehold.co/400x500/fb923c/ffffff?text=露營', views: '8.2k', likes: '1.2k' },
            { id: 102, title: '城市公園的午後野餐', author: '攝影老爸', imageUrl: 'https://placehold.co/400x300/f87171/ffffff?text=野餐', views: '6.5k', likes: '980' },
        ];

        const diaryDetails = {
            1: {
                introText: "2025年的夏天，我們在陽明山的繡球花海中，捕捉了滿滿的笑聲與色彩。",
                bodyText: "一早的好天氣，我們決定出發尋找傳說中的繡球花。寶寶第一次看到這麼大片的花海，眼神裡充滿了好奇。",
                coverImage: "https://placehold.co/600x450/6EE7B7/1F2937?text=花海中的笑聲",
                bodyImage: "https://placehold.co/400x300/A78BFA/FFFFFF?text=出發！",
                galleryImage: "https://placehold.co/600x400/FBCFE8/1F2937?text=美麗的繡球花",
            }
        }

        // Components
        const PrivacyIcon = ({ privacy }) => {
          switch (privacy) {
            case 'group': return <div className="absolute bottom-2 right-2 text-gray-400" title="已分享給群組">👨‍👩‍👧‍👦</div>;
            case 'private': return <div className="absolute bottom-2 right-2 text-gray-400" title="僅限自己">🔒</div>;
            case 'public': return <div className="absolute bottom-2 right-2 text-gray-400" title="公開">🌐</div>;
            default: return null;
          }
        };

        const MemoryCard = ({ diary, onClick }) => (
          <div onClick={onClick} className="bg-white rounded-xl shadow-lg overflow-hidden cursor-pointer hover:scale-105 transition-transform duration-300">
            <img src={diary.imageUrl} alt={diary.title} className="w-full h-40 object-cover" />
            <div className="p-4 relative">
              <h2 className="text-lg font-bold text-gray-800">{diary.title}</h2>
              <p className="text-sm text-gray-500 mt-1">📍 {diary.location}</p>
              <p className="text-xs text-gray-400 mt-2">{diary.date}</p>
              <PrivacyIcon privacy={diary.privacy} />
            </div>
          </div>
        );

        const OnThisDay = () => (
            <div className="bg-amber-100 border-l-4 border-amber-400 p-4 rounded-lg shadow-sm cursor-pointer hover:shadow-md transition-shadow">
                <div className="flex items-center"><span className="text-2xl mr-3">✨</span><div><p className="font-semibold text-amber-800">一年前的今天...</p><p className="text-sm text-amber-700">你們正在沖繩享受陽光與沙灘！點此重溫 &gt;</p></div></div>
            </div>
        );

        const AppHeader = ({ title, onSettingsClick }) => (
            <header className="p-4 pt-8 bg-white/80 backdrop-blur-sm sticky top-0 z-10 border-b border-gray-200 flex-shrink-0">
                <div className="flex justify-between items-center">
                    <div><h1 className="text-xl font-bold text-gray-800">{title}</h1></div>
                    {onSettingsClick && <div className="flex items-center space-x-4">
                        <button onClick={onSettingsClick} className="text-gray-500 hover:text-gray-800">
                            <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066 2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" /><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" /></svg>
                        </button>
                    </div>}
                </div>
            </header>
        );

        const HomeScreen = ({ onDiaryClick, onSettingsClick }) => (
            <div className="page">
                <AppHeader title="下午好，林媽媽！" onSettingsClick={onSettingsClick} />
                <div className="overflow-y-auto flex-1">
                    <main className="p-4 space-y-6 pb-24">
                        <OnThisDay />
                        <h2 className="text-lg font-bold text-gray-700">本週</h2>
                        <MemoryCard diary={diaries[0]} onClick={() => onDiaryClick(diaries[0])} />
                        <h2 className="text-lg font-bold text-gray-700 pt-4">2025年 7月</h2>
                        <MemoryCard diary={diaries[1]} onClick={() => onDiaryClick(diaries[1])} />
                        <MemoryCard diary={diaries[2]} onClick={() => onDiaryClick(diaries[2])} />
                    </main>
                </div>
            </div>
        );
        
        const ExploreScreen = () => (
            <div className="page">
                <header className="p-4 pt-8 bg-white/80 backdrop-blur-sm sticky top-0 z-10 border-b border-gray-200 flex-shrink-0">
                    <div className="relative">
                        <input type="text" placeholder="搜尋日記、創作者或地點..." className="w-full bg-gray-100 border border-gray-200 rounded-full py-2 pl-10 pr-4 focus:outline-none focus:ring-2 focus:ring-amber-400" />
                        <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none"><svg className="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" /></svg></div>
                    </div>
                </header>
                <div className="overflow-y-auto flex-1">
                    <main className="p-4 pb-24">
                        <h2 className="text-xl font-bold text-gray-800 mb-4">探索</h2>
                        <div className="grid grid-cols-2 gap-4">
                            <div className="relative rounded-xl overflow-hidden shadow-lg cursor-pointer h-24"><img src="https://placehold.co/400x200/ec4899/ffffff?text=親子景點" className="w-full h-full object-cover" /><div className="absolute inset-0 bg-black/30 flex items-center justify-center"><h3 className="text-white font-bold text-lg">親子景點</h3></div></div>
                             <div className="relative rounded-xl overflow-hidden shadow-lg cursor-pointer h-24"><img src="https://placehold.co/400x200/84cc16/ffffff?text=戶外露營" className="w-full h-full object-cover" /><div className="absolute inset-0 bg-black/30 flex items-center justify-center"><h3 className="text-white font-bold text-lg">戶外露營</h3></div></div>
                        </div>
                        <div className="relative rounded-xl overflow-hidden shadow-lg cursor-pointer h-24 mt-4"><img src="https://placehold.co/600x200/f97316/ffffff?text=美食之旅" className="w-full h-full object-cover" /><div className="absolute inset-0 bg-black/30 flex items-center justify-center"><h3 className="text-white font-bold text-lg">美食之旅</h3></div></div>
                        <div className="mt-8"><h2 className="text-xl font-bold text-gray-800 mb-4">附近的回憶</h2><div className="rounded-xl overflow-hidden shadow-lg h-40 bg-gray-200 flex items-center justify-center"><p className="text-gray-500">[地圖預覽區]</p></div></div>
                        <div className="mt-8"><h2 className="text-xl font-bold text-gray-800 mb-4">本週熱門創作者</h2><div className="flex space-x-4"><div className="bg-white p-4 rounded-xl shadow-lg flex-1 flex flex-col items-center text-center"><img className="w-16 h-16 rounded-full border-2 border-amber-400 p-1" src="https://placehold.co/100x100/fde68a/a16207?text=媽" alt="Creator 1" /><p className="font-bold mt-2">旅行的媽咪</p><p className="text-xs text-gray-500">5 篇新日記</p><button className="mt-3 bg-amber-500 text-white text-xs font-bold px-4 py-1 rounded-full">追蹤</button></div><div className="bg-white p-4 rounded-xl shadow-lg flex-1 flex flex-col items-center text-center"><img className="w-16 h-16 rounded-full border-2 border-gray-200 p-1" src="https://placehold.co/100x100/dbeafe/1e3a8a?text=爸" alt="Creator 2" /><p className="font-bold mt-2">攝影老爸</p><p className="text-xs text-gray-500">2 篇新日記</p><button className="mt-3 bg-gray-200 text-gray-800 text-xs font-bold px-4 py-1 rounded-full">追蹤</button></div></div></div>
                    </main>
                </div>
            </div>
        );

        const BottomNav = ({ activePage, onNavClick, onFabClick }) => (
            <nav className="absolute bottom-0 left-0 right-0 h-20 bg-white/90 backdrop-blur-sm border-t border-gray-200 flex justify-around items-center z-20">
                <button className={`text-center ${activePage === 'home' ? 'text-amber-500' : 'text-gray-500'}`} onClick={() => onNavClick('home')}>
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 mx-auto" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" /></svg>
                    <p className="text-xs mt-1">首頁</p>
                </button>
                <button onClick={onFabClick} className="bg-amber-500 hover:bg-amber-600 text-white w-16 h-16 rounded-full shadow-lg flex items-center justify-center transform -mt-8">
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 4v16m8-8H4" /></svg>
                </button>
                <button className={`text-center ${activePage === 'explore' ? 'text-amber-500' : 'text-gray-500'}`} onClick={() => onNavClick('explore')}>
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 mx-auto" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l5.447 2.724A1 1 0 0021 16.382V5.618a1 1 0 00-1.447-.894L15 7m-6 3l6-3" /></svg>
                    <p className="text-xs mt-1">探索</p>
                </button>
            </nav>
        );

        // Main App Component
        function App() {
          const [page, setPage] = useState('home'); 
          
          const handleNav = (targetPage) => {
              setPage(targetPage);
          }
          
          const renderPage = () => {
            switch(page) {
                case 'home': return <HomeScreen />;
                case 'explore': return <ExploreScreen />;
                default: return <HomeScreen />;
            }
          }

          return (
            <div className="mobile-screen">
                <div className="relative w-full h-full flex flex-col">
                    <div className="flex-1 overflow-y-auto">
                        {renderPage()}
                    </div>
                    <BottomNav activePage={page} onNavClick={handleNav} onFabClick={() => {}} />
                </div>
            </div>
          );
        }

        const container = document.getElementById('root');
        const root = ReactDOM.createRoot(container);
        root.render(<App />);
    </script>
</body>
</html>
